/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v1.0.6-master-d11d92a
 */
function MdCheckboxDirective(e,n,i,t,o,c){function a(a,r){var s=a.children();return r.type="checkbox",r.tabindex=r.tabindex||"0",a.attr("role",r.type),a.on("click",function(e){this.hasAttribute("disabled")&&e.stopImmediatePropagation()}),s.on("focus",function(){a.focus()}),function(a,r,s,l){function u(e,n,i){s[e]&&a.$watch(s[e],function(e){i[e]&&r.attr(n,i[e])})}function m(e){var n=e.which||e.keyCode;n!==i.KEY_CODE.SPACE&&n!==i.KEY_CODE.ENTER||(e.preventDefault(),r.hasClass("md-focused")||r.addClass("md-focused"),h(e))}function h(e){r[0].hasAttribute("disabled")||a.$apply(function(){var n=s.ngChecked?s.checked:!l.$viewValue;l.$setViewValue(n,e&&e.type),l.$render()})}function v(){l.$viewValue?r.addClass(d):r.removeClass(d)}l=l||o.fakeNgModel(),t(r),s.ngChecked&&a.$watch(a.$eval.bind(a,s.ngChecked),l.$setViewValue.bind(l)),u("ngDisabled","tabindex",{"true":"-1","false":s.tabindex}),n.expectWithText(r,"aria-label"),e.link.pre(a,{on:angular.noop,0:{}},s,[l]),a.mouseActive=!1,r.on("click",h).on("keypress",m).on("mousedown",function(){a.mouseActive=!0,c(function(){a.mouseActive=!1},100)}).on("focus",function(){a.mouseActive===!1&&r.addClass("md-focused")}).on("blur",function(){r.removeClass("md-focused")}),l.$render=v}}e=e[0];var d="md-checked";return{restrict:"E",transclude:!0,require:"?ngModel",priority:210,template:'<div class="md-container" md-ink-ripple md-ink-ripple-checkbox><div class="md-icon"></div></div><div ng-transclude class="md-label"></div>',compile:a}}goog.provide("ng.material.components.checkbox"),goog.require("ng.material.core"),angular.module("material.components.checkbox",["material.core"]).directive("mdCheckbox",MdCheckboxDirective),MdCheckboxDirective.$inject=["inputDirective","$mdAria","$mdConstant","$mdTheming","$mdUtil","$timeout"],ng.material.components.checkbox=angular.module("material.components.checkbox");